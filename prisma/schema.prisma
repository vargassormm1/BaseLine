generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId             Int       @id @default(autoincrement())
  clerkId            String    @unique
  fname              String
  lname              String
  username           String    @unique
  email              String    @unique
  imageUrl           String?
  totalWins          Int       @default(0)
  totalLosses        Int       @default(0)
  totalPoints        Int       @default(0)
  matchesAsPlayerOne Matches[] @relation("PlayerOneMatches")
  matchesAsPlayerTwo Matches[] @relation("PlayerTwoMatches")
  wonMatches         Matches[] @relation("WonMatches")
}

model Matches {
  matchId           Int            @id @default(autoincrement())
  playerOne         Int
  playerTwo         Int
  playerOneUsername String?
  playerTwoUsername String?
  matchType         Int
  winnerId          Int?
  loserId           Int?
  playedAt          DateTime       @default(now())
  playerOneConfirmed    Boolean   @default(false)
  playerTwoConfirmed    Boolean   @default(false)
  scoreVisible          Boolean   @default(false)
  matchDetails      MatchDetails[]
  playerOneUser     User           @relation("PlayerOneMatches", fields: [playerOne], references: [userId])
  playerTwoUser     User           @relation("PlayerTwoMatches", fields: [playerTwo], references: [userId])
  winnerUser        User?          @relation("WonMatches", fields: [winnerId], references: [userId])
}

model MatchDetails {
  detailId                 Int     @id @default(autoincrement())
  matchId                  Int
  setNumber                Int
  playerOneScore           Int
  playerTwoScore           Int
  playerOneTieBreakerScore Int?
  playerTwoTieBreakerScore Int?
  match                    Matches @relation(fields: [matchId], references: [matchId])
}
